#include "B3Yena.h"

/////////////////////////////////////////////////////////////////////////////// 
//
// B3Yena 개체 생성 최상위 호출 함수
//
/////////////////////////////////////////////////////////////////////////////// 
//
B3Yena* B3YenaCreate9(DWORD ver)
{
	B3Yena* pYena = new B3Yena;

	//실패시 예외처리 필요...
	//ASSERT(pYena);

	return pYena;
}

/////////////////////////////////////////////////////////////////////////////// 
//
// B3Yena SW Renderer : 각종 렌더링 '디바이스 Device' 들을 관리할 최상위 클래스
//
/////////////////////////////////////////////////////////////////////////////// 



B3Yena::B3Yena(void)
{
}

B3Yena::~B3Yena(void)
{
}


/////////////////////////////////////////////////////////////////////////////// 
//
// 지정 렌더링 디바이스 개체 생성 메소드.
//
int B3Yena::CreateDevice(HWND hwnd,
	YENAPRESENT_PARAMETERS* pp,
	DWORD vp,
	LPB3YENADEVICE9* ppDevice
)
{
	//입력 정보 확인 : 오류별로 리턴값을 다르게 하는 것을 추천.
	if (hwnd == NULL) return YN_FAIL;
	if (pp == NULL) return YN_FAIL;
	if (ppDevice == NULL) return YN_FAIL;

	//디바이스 개체 생성. : 단순하게 DX9 만 대응합니다.★
	LPB3YENADEVICE9 pDev = new B3YenaDevice9;

	//디바이스 초기화..
	pDev->m_hWnd = hwnd;
	pDev->m_PresentParam = *pp;
	pDev->m_VertexProcessing = vp;
	pDev->_RenderTargetCreate();			//렌더타겟(백버퍼) 생성 : 현재는 1개만 만들어 집니다.

											//외부에 리턴..
	*ppDevice = pDev;

	return YN_OK;
}


/////////////////////////////////////////////////////////////////////////////// 
/////////////////////////////////////////////////////////////////////////////// 
/////////////////////////////////////////////////////////////////////////////// 
/////////////////////////////////////////////////////////////////////////////// 
/////////////////////////////////////////////////////////////////////////////// 
/////////////////////////////////////////////////////////////////////////////// 
/////////////////////////////////////////////////////////////////////////////// 
/////////////////////////////////////////////////////////////////////////////// 
/////////////////////////////////////////////////////////////////////////////// 
/////////////////////////////////////////////////////////////////////////////// 
/////////////////////////////////////////////////////////////////////////////// 
/////////////////////////////////////////////////////////////////////////////// 
/////////////////////////////////////////////////////////////////////////////// 

/////////////////////////////////////////////////////////////////////////////// 
//
// B3YenaDevice9 : DX9 전용 렌더링 "디바이스" 클래스 
//
//                DX 또는 GL 의 지원여부 및 세부버전을 선택(DX8, DX9, DX10, DX11 등..) 하거나
//                해상도, 렌더타겟 개수 또는 HWVP 또는 SWVP 을 결정하는 등의 렌더링 관련 정보를 
//                처리하는 실제 작업용 클래스
//
/////////////////////////////////////////////////////////////////////////////// 

B3YenaDevice9::B3YenaDevice9(void)
{
	m_hWnd = NULL;
	ZeroMemory(&m_PresentParam, sizeof(m_PresentParam));

	m_hBmpRT = NULL;
	m_hSurfaceRT = NULL;
	m_BkColor = RGB(0, 0, 255);

	//Back-Buffer : Render Target 생성.★ 
	//_RenderTargetCreate();

}

B3YenaDevice9::~B3YenaDevice9(void)
{
	//Back-Buffer : Render Target 제거.★ 
	_RenderTargetRelease();

}

///////////////////////////////////////////////////////////////////////////////
//
HDC  B3YenaDevice9::GetRT()
{
	return m_hSurfaceRT;
}

///////////////////////////////////////////////////////////////////////////////
//
COLORREF B3YenaDevice9::GetBkColor()
{
	return m_BkColor;
}


///////////////////////////////////////////////////////////////////////////////
//
//  백버퍼용 렌더타겟을 생성.
//
int B3YenaDevice9::_RenderTargetCreate()
{
	HDC hdc = GetDC(m_hWnd);

	m_hSurfaceRT = CreateCompatibleDC(hdc);
	m_hBmpRT = (HBITMAP)CreateCompatibleBitmap(hdc, m_PresentParam.Width, m_PresentParam.Height);
	SelectObject(m_hSurfaceRT, m_hBmpRT);

	ReleaseDC(m_hWnd, hdc);

	return YN_OK;
}

///////////////////////////////////////////////////////////////////////////////
// 
// 렌더타겟 제거.
//
void B3YenaDevice9::_RenderTargetRelease()
{
	DeleteObject(m_hBmpRT);
	DeleteDC(m_hSurfaceRT);
}

///////////////////////////////////////////////////////////////////////////////
//
// 장면 그리기 시작. : 렌더링에 필요한 (디바이스의) 선위 작업을 수행.
//
int B3YenaDevice9::BeginScene()
{
	//폰트 배경색 기본값 
	//SetBkColor(m_hSurfaceRT, m_BkColor);
	SetBkMode(m_hSurfaceRT, TRANSPARENT);

	return YN_OK;
}

///////////////////////////////////////////////////////////////////////////////
//
// 장면 그리기 종료 ; 렌더링 종료에 필요한 (디바이스의) 후위 작업을 수행.
//
int B3YenaDevice9::EndScene()
{
	//...

	return YN_OK;
}

///////////////////////////////////////////////////////////////////////////////
//
// 렌더타겟 클리어.
//
// 인자 : COLORREF col : RT 을 지울 지정색.
// 리턴 : 
//
int B3YenaDevice9::Clear(COLORREF col)
{
	HBRUSH hBrush = CreateSolidBrush(col);
	RECT rc = { 0, 0, m_PresentParam.Width,  m_PresentParam.Height };
	FillRect(m_hSurfaceRT, &rc, hBrush);
	DeleteObject(hBrush);

	m_BkColor = col;

	return YN_OK;
}

///////////////////////////////////////////////////////////////////////////////
//
// RT 의 내용(렌더링된 장면)을 Front Buffer 에 출력합니다. "Flipping", "Swapping"
//
// 인자 : 없음
// 리턴 : 오류시 YN_OK 이외의 값.
//
int B3YenaDevice9::Present()
{
	HDC hdc = GetDC(m_hWnd);
	BitBlt(hdc, 0, 0, m_PresentParam.Width, m_PresentParam.Height, m_hSurfaceRT, 0, 0, SRCCOPY);
	ReleaseDC(m_hWnd, hdc);

	return YN_OK;
}


/**************** end of "B3Yena.h" ***********************************/
